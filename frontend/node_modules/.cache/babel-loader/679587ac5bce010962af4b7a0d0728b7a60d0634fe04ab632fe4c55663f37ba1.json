{"ast":null,"code":"var _jsxFileName = \"D:\\\\testcare\\\\frontend\\\\src\\\\StressOMeterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SadOMeterPage.css'; // Reuse styles for consistency\nimport ScoreMeter from './ScoreMeter';\nimport GaugeScoreMeter from './GaugeScoreMeter';\nimport './GaugeScoreMeter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StressOMeterPage() {\n  _s();\n  const [stressType, setStressType] = useState(null);\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showBreak, setShowBreak] = useState(false);\n\n  // Dynamic question sets\n  const questionSets = {\n    'Work Stress': [{\n      text: 'Do you feel physically tense or on edge at work?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you feel like you’re running out of time at work?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you avoid tasks just to avoid stress at work?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'Do you feel your work is appreciated?',\n      type: 'mcq',\n      options: ['Always', 'Sometimes', 'Rarely', 'Never']\n    }, {\n      text: 'How often do you bring work stress home?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Academic Pressure': [{\n      text: 'Do you feel overwhelmed by assignments or exams?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you procrastinate due to stress?',\n      type: 'mcq',\n      options: ['Never', 'Sometimes', 'Often', 'Always']\n    }, {\n      text: 'Do you feel pressure to achieve top grades?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you compare yourself to classmates?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you lose sleep over studies?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Relationship Stress': [{\n      text: 'Do you feel misunderstood by people close to you?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you argue or feel tension in relationships?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you avoid conversations to avoid conflict?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'Do you feel emotionally supported?',\n      type: 'mcq',\n      options: ['Always', 'Sometimes', 'Rarely', 'Never']\n    }, {\n      text: 'How often do you feel lonely even when not alone?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Financial Stress': [{\n      text: 'Do you worry about money daily?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you avoid checking your bank account?',\n      type: 'mcq',\n      options: ['Never', 'Sometimes', 'Often', 'Always']\n    }, {\n      text: 'Do you feel anxious about bills or expenses?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you talk to anyone about your finances?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you feel out of control with money?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Just Everything 💀': [{\n      text: 'Do you feel like you’re juggling too many things at once?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you feel like screaming into a pillow?',\n      type: 'mcq',\n      options: ['Never', 'Sometimes', 'Often', 'Always']\n    }, {\n      text: 'Do you feel your brain is running a marathon?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you wish you could pause life for a day?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you feel like you’re running on empty?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }]\n  };\n  const questions = stressType ? questionSets[stressType] : [];\n  const handleStressType = type => {\n    setStressType(type);\n    setStep(0);\n    setAnswers([]);\n    setScore(null);\n    setResult('');\n  };\n  const handleAnswer = val => {\n    setAnswers(a => [...a, val]);\n    if ((step + 1) % 3 === 0 && step !== questions.length - 1) {\n      setShowBreak(true);\n    } else {\n      setStep(s => s + 1);\n    }\n  };\n  const handleContinue = () => {\n    setShowBreak(false);\n    setStep(s => s + 1);\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    setResult('');\n    setScore(null);\n    try {\n      const res = await fetch('/api/mental-health-predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questions: questions.map(q => q.text),\n          answers\n        })\n      });\n      const data = await res.json();\n      const match = data.result.match(/score is (\\d{1,3})/i);\n      let scoreVal = match ? parseInt(match[1]) : null;\n      if (scoreVal === null || isNaN(scoreVal)) scoreVal = 60;\n      setScore(scoreVal);\n      setResult(data.result);\n    } catch (e) {\n      setResult('Error: ' + e.message);\n    }\n    setLoading(false);\n  };\n\n  // Animated emoji based on step\n  const emojiReactions = ['😐', '😬', '😣', '😖', '😱'];\n  const emoji = emojiReactions[Math.min(Math.floor(step / questions.length * emojiReactions.length), emojiReactions.length - 1)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sadometer-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: 0\n      },\n      children: [\"Stress-O-Meter \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 28\n        },\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sadometer-progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sadometer-progress\",\n        style: {\n          width: `${step / (questions.length || 1) * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), !stressType && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sadometer-question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sadometer-question\",\n        style: {\n          fontWeight: 700,\n          fontSize: 20\n        },\n        children: \"What kind of stress are we talking about today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sadometer-options\",\n        children: Object.keys(questionSets).map((type, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sadometer-option-btn\",\n          onClick: () => handleStressType(type),\n          style: {\n            fontSize: 17,\n            margin: 6\n          },\n          children: type\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), stressType && score === null && step < questions.length && !showBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sadometer-question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sadometer-question\",\n        children: questions[step].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sadometer-options\",\n        children: questions[step].options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sadometer-option-btn\",\n          onClick: () => handleAnswer(opt),\n          disabled: loading,\n          children: opt\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), showBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sadometer-break-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 32,\n          marginBottom: 12\n        },\n        children: \"\\uD83E\\uDDD8\\u200D\\u2642\\uFE0F Need a break?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: \"Take a deep breath, stretch, or grab some water. Ready to continue?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sadometer-option-btn\",\n        onClick: handleContinue,\n        children: \"I\\u2019m Ready!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), stressType && step === questions.length && score === null && !showBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"feature-btn\",\n        onClick: handleSubmit,\n        disabled: loading,\n        children: loading ? 'Analyzing...' : 'See My Stress Score'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(GaugeScoreMeter, {\n        score: score,\n        label: \"Your Stress Score\",\n        goodIsHigh: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          fontWeight: 600,\n          color: '#4caf50'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      className: \"feature-btn\",\n      style: {\n        marginTop: 32,\n        display: 'inline-block'\n      },\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), stressType && step < questions.length && !showBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sadometer-floating-break\",\n      onClick: () => setShowBreak(true),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"break\",\n        children: \"\\uD83E\\uDDD8\\u200D\\u2640\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), \" Need a break?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(StressOMeterPage, \"iOeOqs9Ya6yqEiGaWlpzj+ofnJ8=\");\n_c = StressOMeterPage;\nvar _c;\n$RefreshReg$(_c, \"StressOMeterPage\");","map":{"version":3,"names":["React","useState","ScoreMeter","GaugeScoreMeter","jsxDEV","_jsxDEV","StressOMeterPage","_s","stressType","setStressType","step","setStep","answers","setAnswers","score","setScore","result","setResult","loading","setLoading","showBreak","setShowBreak","questionSets","text","type","options","questions","handleStressType","handleAnswer","val","a","length","s","handleContinue","handleSubmit","res","fetch","method","headers","body","JSON","stringify","map","q","data","json","match","scoreVal","parseInt","isNaN","e","message","emojiReactions","emoji","Math","min","floor","className","children","style","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","width","fontWeight","Object","keys","i","onClick","margin","opt","disabled","marginTop","label","goodIsHigh","color","href","display","role","_c","$RefreshReg$"],"sources":["D:/testcare/frontend/src/StressOMeterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SadOMeterPage.css'; // Reuse styles for consistency\r\nimport ScoreMeter from './ScoreMeter';\r\nimport GaugeScoreMeter from './GaugeScoreMeter';\r\nimport './GaugeScoreMeter.css';\r\n\r\nexport default function StressOMeterPage() {\r\n  const [stressType, setStressType] = useState(null);\r\n  const [step, setStep] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(null);\r\n  const [result, setResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showBreak, setShowBreak] = useState(false);\r\n\r\n  // Dynamic question sets\r\n  const questionSets = {\r\n    'Work Stress': [\r\n      { text: 'Do you feel physically tense or on edge at work?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'How often do you feel like you’re running out of time at work?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'Do you avoid tasks just to avoid stress at work?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\r\n      { text: 'Do you feel your work is appreciated?', type: 'mcq', options: ['Always', 'Sometimes', 'Rarely', 'Never'] },\r\n      { text: 'How often do you bring work stress home?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n    ],\r\n    'Academic Pressure': [\r\n      { text: 'Do you feel overwhelmed by assignments or exams?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'How often do you procrastinate due to stress?', type: 'mcq', options: ['Never', 'Sometimes', 'Often', 'Always'] },\r\n      { text: 'Do you feel pressure to achieve top grades?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'Do you compare yourself to classmates?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\r\n      { text: 'How often do you lose sleep over studies?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n    ],\r\n    'Relationship Stress': [\r\n      { text: 'Do you feel misunderstood by people close to you?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\r\n      { text: 'How often do you argue or feel tension in relationships?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'Do you avoid conversations to avoid conflict?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\r\n      { text: 'Do you feel emotionally supported?', type: 'mcq', options: ['Always', 'Sometimes', 'Rarely', 'Never'] },\r\n      { text: 'How often do you feel lonely even when not alone?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n    ],\r\n    'Financial Stress': [\r\n      { text: 'Do you worry about money daily?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'How often do you avoid checking your bank account?', type: 'mcq', options: ['Never', 'Sometimes', 'Often', 'Always'] },\r\n      { text: 'Do you feel anxious about bills or expenses?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'Do you talk to anyone about your finances?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\r\n      { text: 'How often do you feel out of control with money?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n    ],\r\n    'Just Everything 💀': [\r\n      { text: 'Do you feel like you’re juggling too many things at once?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'How often do you feel like screaming into a pillow?', type: 'mcq', options: ['Never', 'Sometimes', 'Often', 'Always'] },\r\n      { text: 'Do you feel your brain is running a marathon?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n      { text: 'Do you wish you could pause life for a day?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\r\n      { text: 'How often do you feel like you’re running on empty?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\r\n    ],\r\n  };\r\n\r\n  const questions = stressType ? questionSets[stressType] : [];\r\n\r\n  const handleStressType = (type) => {\r\n    setStressType(type);\r\n    setStep(0);\r\n    setAnswers([]);\r\n    setScore(null);\r\n    setResult('');\r\n  };\r\n\r\n  const handleAnswer = (val) => {\r\n    setAnswers(a => [...a, val]);\r\n    if ((step + 1) % 3 === 0 && step !== questions.length - 1) {\r\n      setShowBreak(true);\r\n    } else {\r\n      setStep(s => s + 1);\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    setShowBreak(false);\r\n    setStep(s => s + 1);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    setResult('');\r\n    setScore(null);\r\n    try {\r\n      const res = await fetch('/api/mental-health-predict', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          questions: questions.map(q => q.text),\r\n          answers\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      const match = data.result.match(/score is (\\d{1,3})/i);\r\n      let scoreVal = match ? parseInt(match[1]) : null;\r\n      if (scoreVal === null || isNaN(scoreVal)) scoreVal = 60;\r\n      setScore(scoreVal);\r\n      setResult(data.result);\r\n    } catch (e) {\r\n      setResult('Error: ' + e.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Animated emoji based on step\r\n  const emojiReactions = ['😐', '😬', '😣', '😖', '😱'];\r\n  const emoji = emojiReactions[Math.min(Math.floor((step / questions.length) * emojiReactions.length), emojiReactions.length - 1)];\r\n\r\n  return (\r\n    <div className=\"sadometer-root\">\r\n      <h2 style={{marginBottom: 0}}>Stress-O-Meter <span style={{fontSize: 28}}>{emoji}</span></h2>\r\n      <div className=\"sadometer-progress-bar\">\r\n        <div className=\"sadometer-progress\" style={{width: `${(step / (questions.length || 1)) * 100}%`}} />\r\n      </div>\r\n      {!stressType && (\r\n        <div className=\"sadometer-question-card\">\r\n          <div className=\"sadometer-question\" style={{fontWeight: 700, fontSize: 20}}>\r\n            What kind of stress are we talking about today?\r\n          </div>\r\n          <div className=\"sadometer-options\">\r\n            {Object.keys(questionSets).map((type, i) => (\r\n              <button\r\n                key={i}\r\n                className=\"sadometer-option-btn\"\r\n                onClick={() => handleStressType(type)}\r\n                style={{fontSize: 17, margin: 6}}\r\n              >\r\n                {type}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {stressType && score === null && step < questions.length && !showBreak && (\r\n        <div className=\"sadometer-question-card\">\r\n          <div className=\"sadometer-question\">{questions[step].text}</div>\r\n          <div className=\"sadometer-options\">\r\n            {questions[step].options.map((opt, i) => (\r\n              <button\r\n                key={i}\r\n                className=\"sadometer-option-btn\"\r\n                onClick={() => handleAnswer(opt)}\r\n                disabled={loading}\r\n              >\r\n                {opt}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showBreak && (\r\n        <div className=\"sadometer-break-card\">\r\n          <div style={{fontSize: 32, marginBottom: 12}}>🧘‍♂️ Need a break?</div>\r\n          <div style={{marginBottom: 16}}>Take a deep breath, stretch, or grab some water. Ready to continue?</div>\r\n          <button className=\"sadometer-option-btn\" onClick={handleContinue}>I’m Ready!</button>\r\n        </div>\r\n      )}\r\n      {stressType && step === questions.length && score === null && !showBreak && (\r\n        <div style={{marginTop: 24}}>\r\n          <button className=\"feature-btn\" onClick={handleSubmit} disabled={loading}>\r\n            {loading ? 'Analyzing...' : 'See My Stress Score'}\r\n          </button>\r\n        </div>\r\n      )}\r\n      {score !== null && (\r\n        <div style={{marginTop: 32}}>\r\n          <GaugeScoreMeter score={score} label=\"Your Stress Score\" goodIsHigh={false} />\r\n          {result && <div style={{marginTop: 18, fontWeight: 600, color: '#4caf50'}}>{result}</div>}\r\n        </div>\r\n      )}\r\n      <a href=\"/\" className=\"feature-btn\" style={{marginTop: 32, display: 'inline-block'}}>Back to Home</a>\r\n      {/* Floating break prompt */}\r\n      {stressType && step < questions.length && !showBreak && (\r\n        <div className=\"sadometer-floating-break\" onClick={() => setShowBreak(true)}>\r\n          <span role=\"img\" aria-label=\"break\">🧘‍♀️</span> Need a break?\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}