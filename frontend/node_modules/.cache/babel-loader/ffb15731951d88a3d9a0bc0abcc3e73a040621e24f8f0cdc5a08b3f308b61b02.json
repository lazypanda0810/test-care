{"ast":null,"code":"var _jsxFileName = \"D:\\\\testcare\\\\frontend\\\\src\\\\StressOMeterPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './StressOMeterPage.css';\nimport ScoreMeter from './ScoreMeter';\nimport GaugeScoreMeter from './GaugeScoreMeter';\nimport './GaugeScoreMeter.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StressOMeterPage() {\n  _s();\n  const [stressType, setStressType] = useState(null);\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showMindBot, setShowMindBot] = useState(false);\n\n  // Dynamic question sets\n  const questionSets = {\n    'Work Stress': [{\n      text: 'Do you feel physically tense or on edge at work?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you feel like you’re running out of time at work?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you avoid tasks just to avoid stress at work?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'Do you feel your work is appreciated?',\n      type: 'mcq',\n      options: ['Always', 'Sometimes', 'Rarely', 'Never']\n    }, {\n      text: 'How often do you bring work stress home?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Academic Pressure': [{\n      text: 'Do you feel overwhelmed by assignments or exams?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you procrastinate due to stress?',\n      type: 'mcq',\n      options: ['Never', 'Sometimes', 'Often', 'Always']\n    }, {\n      text: 'Do you feel pressure to achieve top grades?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you compare yourself to classmates?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you lose sleep over studies?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Relationship Stress': [{\n      text: 'Do you feel misunderstood by people close to you?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you argue or feel tension in relationships?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you avoid conversations to avoid conflict?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'Do you feel emotionally supported?',\n      type: 'mcq',\n      options: ['Always', 'Sometimes', 'Rarely', 'Never']\n    }, {\n      text: 'How often do you feel lonely even when not alone?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Financial Stress': [{\n      text: 'Do you worry about money daily?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you avoid checking your bank account?',\n      type: 'mcq',\n      options: ['Never', 'Sometimes', 'Often', 'Always']\n    }, {\n      text: 'Do you feel anxious about bills or expenses?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you talk to anyone about your finances?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you feel out of control with money?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }],\n    'Just Everything 💀': [{\n      text: 'Do you feel like you’re juggling too many things at once?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'How often do you feel like screaming into a pillow?',\n      type: 'mcq',\n      options: ['Never', 'Sometimes', 'Often', 'Always']\n    }, {\n      text: 'Do you feel your brain is running a marathon?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }, {\n      text: 'Do you wish you could pause life for a day?',\n      type: 'mcq',\n      options: ['Yes', 'No', 'Sometimes']\n    }, {\n      text: 'How often do you feel like you’re running on empty?',\n      type: 'scale',\n      options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often']\n    }]\n  };\n  const questions = stressType ? questionSets[stressType] : [];\n  const handleStressType = type => {\n    setStressType(type);\n    setStep(0);\n    setAnswers([]);\n    setScore(null);\n    setResult('');\n  };\n  const handleAnswer = val => {\n    setAnswers(a => [...a, val]);\n    setStep(s => s + 1);\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    setResult('');\n    setScore(null);\n    try {\n      const res = await fetch('/api/mental-health-predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questions: questions.map(q => q.text),\n          answers\n        })\n      });\n      const data = await res.json();\n      const match = data.result.match(/score is (\\d{1,3})/i);\n      let scoreVal = match ? parseInt(match[1]) : null;\n      if (scoreVal === null || isNaN(scoreVal)) scoreVal = 60;\n      setScore(scoreVal);\n      setResult(data.result);\n    } catch (e) {\n      setResult('Error: ' + e.message);\n    }\n    setLoading(false);\n  };\n\n  // Animated emoji based on step\n  const emojiReactions = ['😐', '😬', '😣', '😖', '😱'];\n  const emoji = emojiReactions[Math.min(Math.floor(step / (questions.length || 1) * emojiReactions.length), emojiReactions.length - 1)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stressometer-root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onMindBotClick: () => setShowMindBot(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: 0\n        },\n        children: \"Stress-O-Meter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stressometer-progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stressometer-progress\",\n          style: {\n            width: `${step / (questions.length || 1) * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), !stressType && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '32px 0',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 700,\n            fontSize: 20,\n            marginBottom: 18\n          },\n          children: \"What kind of stress are you feeling?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 12\n          },\n          children: Object.keys(questionSets).map((type, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"feature-btn\",\n            style: {\n              margin: '0 auto',\n              minWidth: 180\n            },\n            onClick: () => handleStressType(type),\n            children: type\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), stressType && score === null && /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: '100%',\n          maxWidth: 420\n        },\n        onSubmit: e => {\n          e.preventDefault();\n          handleSubmit();\n        },\n        children: [questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 18\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-number\",\n              children: [\"Q\", idx + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-text\",\n              children: q.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-row\",\n            children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${idx}`,\n                value: opt,\n                checked: answers[idx] === opt,\n                onChange: () => {\n                  const newA = [...answers];\n                  newA[idx] = opt;\n                  setAnswers(newA);\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this), opt]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"feature-btn\",\n          type: \"submit\",\n          style: {\n            marginTop: 24\n          },\n          disabled: loading,\n          children: loading ? 'Analyzing...' : 'Get Me My Score'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '32px 0',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#f3e5f5',\n              borderRadius: 12,\n              padding: '18px 24px',\n              boxShadow: '0 2px 12px #e1bee7',\n              minWidth: 220,\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 700,\n                color: '#7c4dff',\n                marginBottom: 6\n              },\n              children: \"Sponsored\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 15,\n                color: '#333'\n              },\n              children: [\"Try our new Zen Snack Box! Mindful treats for your mood. \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                style: {\n                  color: '#7c4dff',\n                  textDecoration: 'underline'\n                },\n                children: \"Learn more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 115\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), score !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(GaugeScoreMeter, {\n          score: score,\n          label: \"Your Stress Score\",\n          subLabel: \"Stress Level\",\n          tooltip: \"Lower is better! This is your stress score.\",\n          goodIsHigh: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 18,\n            fontWeight: 600,\n            color: '#4caf50'\n          },\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), result && !loading && score === null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          fontWeight: 600,\n          color: 'red'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), showMindBot && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: 4000,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        onMindBotClick: () => setShowMindBot(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 120\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(StressOMeterPage, \"HkkpV6108ByXMUN62/R7Hp4WEHE=\");\n_c = StressOMeterPage;\nvar _c;\n$RefreshReg$(_c, \"StressOMeterPage\");","map":{"version":3,"names":["React","ScoreMeter","GaugeScoreMeter","Header","jsxDEV","_jsxDEV","StressOMeterPage","_s","stressType","setStressType","useState","step","setStep","answers","setAnswers","score","setScore","result","setResult","loading","setLoading","showMindBot","setShowMindBot","questionSets","text","type","options","questions","handleStressType","handleAnswer","val","a","s","handleSubmit","res","fetch","method","headers","body","JSON","stringify","map","q","data","json","match","scoreVal","parseInt","isNaN","e","message","emojiReactions","emoji","Math","min","floor","length","className","children","onMindBotClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","marginBottom","width","margin","textAlign","fontWeight","fontSize","gap","Object","keys","i","minWidth","onClick","maxWidth","onSubmit","preventDefault","idx","opt","name","value","checked","onChange","newA","required","marginTop","disabled","justifyContent","background","borderRadius","padding","boxShadow","color","href","textDecoration","label","subLabel","tooltip","goodIsHigh","zIndex","position","top","left","height","_c","$RefreshReg$"],"sources":["D:/testcare/frontend/src/StressOMeterPage.js"],"sourcesContent":["import React from 'react';\nimport './StressOMeterPage.css';\n\nimport ScoreMeter from './ScoreMeter';\nimport GaugeScoreMeter from './GaugeScoreMeter';\nimport './GaugeScoreMeter.css';\nimport Header from './Header';\n\nexport default function StressOMeterPage() {\n  const [stressType, setStressType] = useState(null);\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showMindBot, setShowMindBot] = useState(false);\n\n  // Dynamic question sets\n  const questionSets = {\n    'Work Stress': [\n      { text: 'Do you feel physically tense or on edge at work?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'How often do you feel like you’re running out of time at work?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'Do you avoid tasks just to avoid stress at work?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\n      { text: 'Do you feel your work is appreciated?', type: 'mcq', options: ['Always', 'Sometimes', 'Rarely', 'Never'] },\n      { text: 'How often do you bring work stress home?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n    ],\n    'Academic Pressure': [\n      { text: 'Do you feel overwhelmed by assignments or exams?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'How often do you procrastinate due to stress?', type: 'mcq', options: ['Never', 'Sometimes', 'Often', 'Always'] },\n      { text: 'Do you feel pressure to achieve top grades?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'Do you compare yourself to classmates?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\n      { text: 'How often do you lose sleep over studies?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n    ],\n    'Relationship Stress': [\n      { text: 'Do you feel misunderstood by people close to you?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\n      { text: 'How often do you argue or feel tension in relationships?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'Do you avoid conversations to avoid conflict?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\n      { text: 'Do you feel emotionally supported?', type: 'mcq', options: ['Always', 'Sometimes', 'Rarely', 'Never'] },\n      { text: 'How often do you feel lonely even when not alone?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n    ],\n    'Financial Stress': [\n      { text: 'Do you worry about money daily?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'How often do you avoid checking your bank account?', type: 'mcq', options: ['Never', 'Sometimes', 'Often', 'Always'] },\n      { text: 'Do you feel anxious about bills or expenses?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'Do you talk to anyone about your finances?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\n      { text: 'How often do you feel out of control with money?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n    ],\n    'Just Everything 💀': [\n      { text: 'Do you feel like you’re juggling too many things at once?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'How often do you feel like screaming into a pillow?', type: 'mcq', options: ['Never', 'Sometimes', 'Often', 'Always'] },\n      { text: 'Do you feel your brain is running a marathon?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n      { text: 'Do you wish you could pause life for a day?', type: 'mcq', options: ['Yes', 'No', 'Sometimes'] },\n      { text: 'How often do you feel like you’re running on empty?', type: 'scale', options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Very Often'] },\n    ],\n  };\n\n  const questions = stressType ? questionSets[stressType] : [];\n\n  const handleStressType = (type) => {\n    setStressType(type);\n    setStep(0);\n    setAnswers([]);\n    setScore(null);\n    setResult('');\n  };\n\n  const handleAnswer = (val) => {\n    setAnswers(a => [...a, val]);\n    setStep(s => s + 1);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    setResult('');\n    setScore(null);\n    try {\n      const res = await fetch('/api/mental-health-predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          questions: questions.map(q => q.text),\n          answers\n        })\n      });\n      const data = await res.json();\n      const match = data.result.match(/score is (\\d{1,3})/i);\n      let scoreVal = match ? parseInt(match[1]) : null;\n      if (scoreVal === null || isNaN(scoreVal)) scoreVal = 60;\n      setScore(scoreVal);\n      setResult(data.result);\n    } catch (e) {\n      setResult('Error: ' + e.message);\n    }\n    setLoading(false);\n  };\n\n  // Animated emoji based on step\n  const emojiReactions = ['😐', '😬', '😣', '😖', '😱'];\n  const emoji = emojiReactions[Math.min(Math.floor((step / (questions.length || 1)) * emojiReactions.length), emojiReactions.length - 1)];\n\n  return (\n    <div className=\"stressometer-root\">\n      <Header onMindBotClick={() => setShowMindBot(true)} />\n      <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\n        <h2 style={{marginBottom: 0}}>Stress-O-Meter</h2>\n        <div className=\"stressometer-progress-bar\">\n          <div className=\"stressometer-progress\" style={{width: `${(step / (questions.length || 1)) * 100}%`}} />\n        </div>\n        {/* Render all questions at once like Google Forms if stressType is selected */}\n        {!stressType && (\n          <div style={{margin:'32px 0', textAlign:'center'}}>\n            <div style={{fontWeight:700, fontSize:20, marginBottom:18}}>What kind of stress are you feeling?</div>\n            <div style={{display:'flex', flexDirection:'column', gap:12}}>\n              {Object.keys(questionSets).map((type, i) => (\n                <button key={i} className=\"feature-btn\" style={{margin:'0 auto', minWidth:180}} onClick={() => handleStressType(type)}>{type}</button>\n              ))}\n            </div>\n          </div>\n        )}\n        {stressType && score === null && (\n          <form style={{width:'100%', maxWidth:420}} onSubmit={e => {e.preventDefault(); handleSubmit();}}>\n            {questions.map((q, idx) => (\n              <div key={idx} style={{marginBottom: 18}}>\n                <div className=\"question-row\">\n                  <span className=\"question-number\">Q{idx + 1}.</span>\n                  <span className=\"question-text\">{q.text}</span>\n                </div>\n                <div className=\"options-row\">\n                  {q.options.map((opt, i) => (\n                    <label key={i}>\n                      <input\n                        type=\"radio\"\n                        name={`q${idx}`}\n                        value={opt}\n                        checked={answers[idx] === opt}\n                        onChange={() => {\n                          const newA = [...answers];\n                          newA[idx] = opt;\n                          setAnswers(newA);\n                        }}\n                        required\n                      />\n                      {opt}\n                    </label>\n                  ))}\n                </div>\n              </div>\n            ))}\n            <button className=\"feature-btn\" type=\"submit\" style={{marginTop:24}} disabled={loading}>\n              {loading ? 'Analyzing...' : 'Get Me My Score'}\n            </button>\n            {/* Ad section */}\n            <div style={{margin:'32px 0', width:'100%', display:'flex', justifyContent:'center'}}>\n              <div style={{background:'#f3e5f5', borderRadius:12, padding:'18px 24px', boxShadow:'0 2px 12px #e1bee7', minWidth:220, textAlign:'center'}}>\n                <div style={{fontWeight:700, color:'#7c4dff', marginBottom:6}}>Sponsored</div>\n                <div style={{fontSize:15, color:'#333'}}>Try our new Zen Snack Box! Mindful treats for your mood. <a href=\"#\" style={{color:'#7c4dff', textDecoration:'underline'}}>Learn more</a></div>\n              </div>\n            </div>\n          </form>\n        )}\n        {score !== null && (\n          <div style={{marginTop: 32}}>\n            <GaugeScoreMeter\n              score={score}\n              label=\"Your Stress Score\"\n              subLabel=\"Stress Level\"\n              tooltip=\"Lower is better! This is your stress score.\"\n              goodIsHigh={false}\n            />\n            {result && <div style={{marginTop: 18, fontWeight: 600, color: '#4caf50'}}>{result}</div>}\n          </div>\n        )}\n        {result && !loading && score === null && (\n          <div style={{marginTop: 18, fontWeight: 600, color: 'red'}}>{result}</div>\n        )}\n      </div>\n      {showMindBot && <div style={{zIndex: 4000, position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh'}}><Header onMindBotClick={() => setShowMindBot(false)} /></div>}\n      <div style={{display:'flex', flexDirection:'column', alignItems:'center', width:'100%'}}>\n        {/* GIFs removed as requested. Main content remains centered. */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}