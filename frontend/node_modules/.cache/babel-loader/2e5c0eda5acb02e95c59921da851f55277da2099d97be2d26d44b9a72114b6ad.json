{"ast":null,"code":"var _jsxFileName = \"D:\\\\testcare\\\\frontend\\\\src\\\\GaugeScoreMeter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './GaugeScoreMeter.css';\nimport { FaInfoCircle } from 'react-icons/fa';\n\n// Helper to get color based on score (0-100)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getGradientColor(score) {\n  if (score < 40) return '#e53935'; // red\n  if (score < 70) return '#ffb300'; // orange\n  return '#43a047'; // green\n}\nexport default function GaugeScoreMeter({\n  score = 0,\n  label = '',\n  subLabel = '',\n  tooltip = '',\n  goodIsHigh = true\n}) {\n  _s();\n  const radius = 100;\n  const stroke = 20;\n  const normalizedScore = Math.max(0, Math.min(100, score));\n  const angle = normalizedScore / 100 * 180;\n  const circumference = Math.PI * radius;\n  const offset = circumference * (1 - normalizedScore / 100);\n  const color = getGradientColor(goodIsHigh ? normalizedScore : 100 - normalizedScore);\n  const emoji = goodIsHigh ? score >= 80 ? '😃' : score >= 60 ? '🙂' : score >= 40 ? '😐' : '😟' : score >= 80 ? '😟' : score >= 60 ? '😐' : score >= 40 ? '🙂' : '😃';\n  const arcRef = useRef();\n  useEffect(() => {\n    if (arcRef.current) {\n      arcRef.current.style.strokeDashoffset = circumference;\n      setTimeout(() => {\n        arcRef.current.style.transition = 'stroke-dashoffset 1.2s cubic-bezier(.7,0,.3,1)';\n        arcRef.current.style.strokeDashoffset = offset;\n      }, 100);\n    }\n  }, [score, circumference, offset]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gauge-meter-root gauge-meter-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: radius * 2 + stroke,\n      height: radius + stroke,\n      viewBox: `0 0 ${radius * 2 + stroke} ${radius + stroke}`,\n      style: {\n        width: '100%',\n        maxWidth: 320,\n        height: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"gaugeGradient\",\n          x1: \"0%\",\n          y1: \"100%\",\n          x2: \"100%\",\n          y2: \"0%\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"0%\",\n            stopColor: \"#e53935\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"50%\",\n            stopColor: \"#ffb300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: \"#43a047\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M${stroke / 2},${radius + stroke / 2} A${radius},${radius} 0 0,1 ${radius * 2 + stroke / 2},${radius + stroke / 2}`,\n        fill: \"none\",\n        stroke: \"#e0e0e0\",\n        strokeWidth: stroke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        ref: arcRef,\n        d: `M${stroke / 2},${radius + stroke / 2} A${radius},${radius} 0 0,1 ${radius * 2 + stroke / 2},${radius + stroke / 2}`,\n        fill: \"none\",\n        stroke: \"url(#gaugeGradient)\",\n        strokeWidth: stroke,\n        strokeDasharray: circumference,\n        strokeDashoffset: circumference,\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauge-meter-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gauge-meter-score\",\n        style: {\n          color\n        },\n        children: [score, \"% \", emoji]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-meter-desc\",\n        children: [label, tooltip && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gauge-meter-tooltip\",\n          children: /*#__PURE__*/_jsxDEV(FaInfoCircle, {\n            title: tooltip,\n            style: {\n              marginLeft: 6,\n              fontSize: 16,\n              verticalAlign: 'middle',\n              color: '#888'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), subLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-meter-sublabel\",\n        children: subLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(GaugeScoreMeter, \"mfhLzSU56rCQV/57IFsfKFw0MiA=\");\n_c = GaugeScoreMeter;\nvar _c;\n$RefreshReg$(_c, \"GaugeScoreMeter\");","map":{"version":3,"names":["React","useEffect","useRef","FaInfoCircle","jsxDEV","_jsxDEV","getGradientColor","score","GaugeScoreMeter","label","subLabel","tooltip","goodIsHigh","_s","radius","stroke","normalizedScore","Math","max","min","angle","circumference","PI","offset","color","emoji","arcRef","current","style","strokeDashoffset","setTimeout","transition","className","children","width","height","viewBox","maxWidth","id","x1","y1","x2","y2","stopColor","fileName","_jsxFileName","lineNumber","columnNumber","d","fill","strokeWidth","ref","strokeDasharray","strokeLinecap","title","marginLeft","fontSize","verticalAlign","_c","$RefreshReg$"],"sources":["D:/testcare/frontend/src/GaugeScoreMeter.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './GaugeScoreMeter.css';\r\nimport { FaInfoCircle } from 'react-icons/fa';\r\n\r\n// Helper to get color based on score (0-100)\r\nfunction getGradientColor(score) {\r\n  if (score < 40) return '#e53935'; // red\r\n  if (score < 70) return '#ffb300'; // orange\r\n  return '#43a047'; // green\r\n}\r\n\r\nexport default function GaugeScoreMeter({ score = 0, label = '', subLabel = '', tooltip = '', goodIsHigh = true }) {\r\n  const radius = 100;\r\n  const stroke = 20;\r\n  const normalizedScore = Math.max(0, Math.min(100, score));\r\n  const angle = (normalizedScore / 100) * 180;\r\n  const circumference = Math.PI * radius;\r\n  const offset = circumference * (1 - normalizedScore / 100);\r\n  const color = getGradientColor(goodIsHigh ? normalizedScore : 100 - normalizedScore);\r\n  const emoji = goodIsHigh\r\n    ? (score >= 80 ? '😃' : score >= 60 ? '🙂' : score >= 40 ? '😐' : '😟')\r\n    : (score >= 80 ? '😟' : score >= 60 ? '😐' : score >= 40 ? '🙂' : '😃');\r\n\r\n  const arcRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (arcRef.current) {\r\n      arcRef.current.style.strokeDashoffset = circumference;\r\n      setTimeout(() => {\r\n        arcRef.current.style.transition = 'stroke-dashoffset 1.2s cubic-bezier(.7,0,.3,1)';\r\n        arcRef.current.style.strokeDashoffset = offset;\r\n      }, 100);\r\n    }\r\n  }, [score, circumference, offset]);\r\n\r\n  return (\r\n    <div className=\"gauge-meter-root gauge-meter-card\">\r\n      <svg width={radius * 2 + stroke} height={radius + stroke} viewBox={`0 0 ${radius * 2 + stroke} ${radius + stroke}`} style={{width: '100%', maxWidth: 320, height: 'auto'}}>\r\n        <defs>\r\n          <linearGradient id=\"gaugeGradient\" x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\">\r\n            <stop offset=\"0%\" stopColor=\"#e53935\" />\r\n            <stop offset=\"50%\" stopColor=\"#ffb300\" />\r\n            <stop offset=\"100%\" stopColor=\"#43a047\" />\r\n          </linearGradient>\r\n        </defs>\r\n        {/* Background arc */}\r\n        <path\r\n          d={`M${stroke / 2},${radius + stroke / 2} A${radius},${radius} 0 0,1 ${radius * 2 + stroke / 2},${radius + stroke / 2}`}\r\n          fill=\"none\"\r\n          stroke=\"#e0e0e0\"\r\n          strokeWidth={stroke}\r\n        />\r\n        {/* Foreground arc */}\r\n        <path\r\n          ref={arcRef}\r\n          d={`M${stroke / 2},${radius + stroke / 2} A${radius},${radius} 0 0,1 ${radius * 2 + stroke / 2},${radius + stroke / 2}`}\r\n          fill=\"none\"\r\n          stroke=\"url(#gaugeGradient)\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={circumference}\r\n          strokeLinecap=\"round\"\r\n        />\r\n      </svg>\r\n      <div className=\"gauge-meter-label\">\r\n        <span className=\"gauge-meter-score\" style={{ color }}>{score}% {emoji}</span>\r\n        <div className=\"gauge-meter-desc\">{label}\r\n          {tooltip && (\r\n            <span className=\"gauge-meter-tooltip\">\r\n              <FaInfoCircle title={tooltip} style={{marginLeft: 6, fontSize: 16, verticalAlign: 'middle', color: '#888'}} />\r\n            </span>\r\n          )}\r\n        </div>\r\n        {subLabel && <div className=\"gauge-meter-sublabel\">{subLabel}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}