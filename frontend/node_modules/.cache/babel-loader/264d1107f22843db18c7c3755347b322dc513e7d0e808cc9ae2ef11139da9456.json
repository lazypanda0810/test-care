{"ast":null,"code":"var _jsxFileName = \"D:\\\\testcare\\\\frontend\\\\src\\\\SadOMeterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport GaugeScoreMeter from './GaugeScoreMeter';\nimport './GaugeScoreMeter.css';\nimport './SadOMeterPage.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SADOMETER_QUESTION_POOL = ['How often do you feel sad or empty without a clear reason?', 'Do you find it difficult to enjoy activities you used to love?', 'How often do you feel hopeless about the future?', 'Do you struggle to motivate yourself to start daily tasks (work, school, chores)?', 'How frequently do you feel tired or have little energy, even after rest?', 'Do you find it hard to focus on things like reading or watching shows?', 'How often do you feel worthless or like you’re failing others?', 'Do you have trouble falling asleep, staying asleep, or waking up too early?', 'Do you sleep much more than usual to avoid facing the day?', 'How often do you feel restless, agitated, or unable to sit still?', 'Do you feel like your body is moving or thinking slower than normal?', 'How often do you find yourself withdrawing from friends and family?', 'Do you avoid messages, calls, or social invitations even when you know they’d be good for you?', 'When you’re on social media, do you compare yourself to others and feel worse about your own life?', 'Do you find yourself scrolling social media just to distract from your thoughts?', 'After using social media, do you usually feel more down than before?', 'Do you find it hard to believe positive things others say about you?', 'How often do you have thoughts like “people would be better off without me”?', 'Do you find yourself thinking life is not worth the effort?', 'How frequently do you cry or feel like crying, even over small things?', 'Do you blame yourself for things that are out of your control?', 'Have you lost interest in caring for your appearance or hygiene?', 'How often do you feel disconnected from your surroundings or like you’re just going through the motions?', 'Do you struggle to feel close to others, even people you care about?', 'Do you eat much less or much more than usual without really noticing?', 'How often do you feel numb, like you can’t feel much of anything at all?', 'Do you feel guilty for taking breaks or resting, even when you’re exhausted?', 'Do you feel you’re a burden on those around you?', 'How often do you feel tense or on edge, even without clear reasons?', 'Do you find it hard to imagine things improving in your life?'];\nconst SADOMETER_OPTIONS = ['Never', 'Rarely', 'Sometimes', 'Often', 'Almost Always'];\nfunction shuffle(array) {\n  const arr = array.slice();\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\nconst emojiReactions = ['😐', '😢', '😞', '😭', '😔'];\nexport default function SadOMeterPage() {\n  _s();\n  // Randomly select 20–25 questions for this session\n  const questions = useMemo(() => shuffle(SADOMETER_QUESTION_POOL).slice(0, Math.floor(20 + Math.random() * 6)), []);\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showMindBot, setShowMindBot] = useState(false);\n\n  // Randomize options per question\n  const optionsForStep = useMemo(() => shuffle(SADOMETER_OPTIONS), [step]);\n  const handleAnswer = val => {\n    setAnswers(a => {\n      const newA = [...a];\n      newA[step] = val;\n      return newA;\n    });\n    setStep(s => s + 1);\n  };\n  const handleSubmit = async () => {\n    if (answers.length < questions.length || answers.some(a => !a)) {\n      setResult('Please answer all questions before submitting.');\n      return;\n    }\n    setLoading(true);\n    setResult('');\n    setScore(null);\n    try {\n      const res = await fetch('/api/mental-health-predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questions,\n          answers\n        })\n      });\n      if (!res.ok) {\n        setResult('Error: Invalid or incomplete answers. Please answer all questions.');\n        setLoading(false);\n        return;\n      }\n      const data = await res.json();\n      const match = data.result.match(/score is (\\d{1,3})/i);\n      let scoreVal = match ? parseInt(match[1]) : null;\n      if (scoreVal === null || isNaN(scoreVal)) scoreVal = 60;\n      setScore(scoreVal);\n      setResult(data.result);\n    } catch (e) {\n      setResult('Error: ' + e.message);\n    }\n    setLoading(false);\n  };\n\n  // Animated emoji based on step\n  const emoji = emojiReactions[Math.min(Math.floor(step / questions.length * emojiReactions.length), emojiReactions.length - 1)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sadometer-root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onMindBotClick: () => setShowMindBot(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: 0\n        },\n        children: [\"Sad-o-Meter \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 28\n          },\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sadometer-progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sadometer-progress\",\n          style: {\n            width: `${step / questions.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), score === null && /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: '100%',\n          maxWidth: 420\n        },\n        onSubmit: e => {\n          e.preventDefault();\n          handleSubmit();\n        },\n        children: [questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sadometer-question-card\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginBottom: 18\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sadometer-question\",\n            style: {\n              justifyContent: 'center',\n              textAlign: 'center'\n            },\n            children: q\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sadometer-options\",\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: SADOMETER_OPTIONS.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                margin: '6px auto',\n                minWidth: 120,\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${idx}`,\n                value: opt,\n                checked: answers[idx] === opt,\n                onChange: () => setAnswers(a => {\n                  const na = [...a];\n                  na[idx] = opt;\n                  return na;\n                }),\n                style: {\n                  marginRight: 8\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this), opt]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"feature-btn\",\n          type: \"submit\",\n          style: {\n            marginTop: 24\n          },\n          disabled: loading,\n          children: loading ? 'Analyzing...' : 'Get Me My Score'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), score !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(GaugeScoreMeter, {\n          score: score,\n          label: \"Your Sadness Score\",\n          subLabel: \"Sadness Level\",\n          tooltip: \"Lower is better! This is your sadness score.\",\n          goodIsHigh: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 18,\n            fontWeight: 600,\n            color: '#4caf50'\n          },\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), result && !loading && score === null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          fontWeight: 600,\n          color: 'red'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), showMindBot && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: 4000,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        onMindBotClick: () => setShowMindBot(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 120\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(SadOMeterPage, \"7IbQ+I54Gx2dNAmtB9l0oSng7Cs=\");\n_c = SadOMeterPage;\nvar _c;\n$RefreshReg$(_c, \"SadOMeterPage\");","map":{"version":3,"names":["React","useState","useMemo","GaugeScoreMeter","Header","jsxDEV","_jsxDEV","SADOMETER_QUESTION_POOL","SADOMETER_OPTIONS","shuffle","array","arr","slice","i","length","j","Math","floor","random","emojiReactions","SadOMeterPage","_s","questions","step","setStep","answers","setAnswers","score","setScore","result","setResult","loading","setLoading","showMindBot","setShowMindBot","optionsForStep","handleAnswer","val","a","newA","s","handleSubmit","some","res","fetch","method","headers","body","JSON","stringify","ok","data","json","match","scoreVal","parseInt","isNaN","e","message","emoji","min","className","children","onMindBotClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","marginBottom","fontSize","width","maxWidth","onSubmit","preventDefault","map","q","idx","justifyContent","textAlign","opt","margin","minWidth","cursor","type","name","value","checked","onChange","na","marginRight","required","marginTop","disabled","label","subLabel","tooltip","goodIsHigh","fontWeight","color","zIndex","position","top","left","height","_c","$RefreshReg$"],"sources":["D:/testcare/frontend/src/SadOMeterPage.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport GaugeScoreMeter from './GaugeScoreMeter';\r\nimport './GaugeScoreMeter.css';\r\nimport './SadOMeterPage.css';\r\nimport Header from './Header';\r\n\r\nconst SADOMETER_QUESTION_POOL = [\r\n  'How often do you feel sad or empty without a clear reason?',\r\n  'Do you find it difficult to enjoy activities you used to love?',\r\n  'How often do you feel hopeless about the future?',\r\n  'Do you struggle to motivate yourself to start daily tasks (work, school, chores)?',\r\n  'How frequently do you feel tired or have little energy, even after rest?',\r\n  'Do you find it hard to focus on things like reading or watching shows?',\r\n  'How often do you feel worthless or like you’re failing others?',\r\n  'Do you have trouble falling asleep, staying asleep, or waking up too early?',\r\n  'Do you sleep much more than usual to avoid facing the day?',\r\n  'How often do you feel restless, agitated, or unable to sit still?',\r\n  'Do you feel like your body is moving or thinking slower than normal?',\r\n  'How often do you find yourself withdrawing from friends and family?',\r\n  'Do you avoid messages, calls, or social invitations even when you know they’d be good for you?',\r\n  'When you’re on social media, do you compare yourself to others and feel worse about your own life?',\r\n  'Do you find yourself scrolling social media just to distract from your thoughts?',\r\n  'After using social media, do you usually feel more down than before?',\r\n  'Do you find it hard to believe positive things others say about you?',\r\n  'How often do you have thoughts like “people would be better off without me”?',\r\n  'Do you find yourself thinking life is not worth the effort?',\r\n  'How frequently do you cry or feel like crying, even over small things?',\r\n  'Do you blame yourself for things that are out of your control?',\r\n  'Have you lost interest in caring for your appearance or hygiene?',\r\n  'How often do you feel disconnected from your surroundings or like you’re just going through the motions?',\r\n  'Do you struggle to feel close to others, even people you care about?',\r\n  'Do you eat much less or much more than usual without really noticing?',\r\n  'How often do you feel numb, like you can’t feel much of anything at all?',\r\n  'Do you feel guilty for taking breaks or resting, even when you’re exhausted?',\r\n  'Do you feel you’re a burden on those around you?',\r\n  'How often do you feel tense or on edge, even without clear reasons?',\r\n  'Do you find it hard to imagine things improving in your life?'\r\n];\r\n\r\nconst SADOMETER_OPTIONS = [\r\n  'Never',\r\n  'Rarely',\r\n  'Sometimes',\r\n  'Often',\r\n  'Almost Always'\r\n];\r\n\r\nfunction shuffle(array) {\r\n  const arr = array.slice();\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [arr[i], arr[j]] = [arr[j], arr[i]];\r\n  }\r\n  return arr;\r\n}\r\n\r\nconst emojiReactions = ['😐', '😢', '😞', '😭', '😔'];\r\n\r\nexport default function SadOMeterPage() {\r\n  // Randomly select 20–25 questions for this session\r\n  const questions = useMemo(() => shuffle(SADOMETER_QUESTION_POOL).slice(0, Math.floor(20 + Math.random() * 6)), []);\r\n  const [step, setStep] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(null);\r\n  const [result, setResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showMindBot, setShowMindBot] = useState(false);\r\n\r\n  // Randomize options per question\r\n  const optionsForStep = useMemo(() => shuffle(SADOMETER_OPTIONS), [step]);\r\n\r\n  const handleAnswer = (val) => {\r\n    setAnswers(a => {\r\n      const newA = [...a];\r\n      newA[step] = val;\r\n      return newA;\r\n    });\r\n    setStep(s => s + 1);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (answers.length < questions.length || answers.some(a => !a)) {\r\n      setResult('Please answer all questions before submitting.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setResult('');\r\n    setScore(null);\r\n    try {\r\n      const res = await fetch('/api/mental-health-predict', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          questions,\r\n          answers\r\n        })\r\n      });\r\n      if (!res.ok) {\r\n        setResult('Error: Invalid or incomplete answers. Please answer all questions.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      const match = data.result.match(/score is (\\d{1,3})/i);\r\n      let scoreVal = match ? parseInt(match[1]) : null;\r\n      if (scoreVal === null || isNaN(scoreVal)) scoreVal = 60;\r\n      setScore(scoreVal);\r\n      setResult(data.result);\r\n    } catch (e) {\r\n      setResult('Error: ' + e.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Animated emoji based on step\r\n  const emoji = emojiReactions[Math.min(Math.floor((step / questions.length) * emojiReactions.length), emojiReactions.length - 1)];\r\n\r\n  return (\r\n    <div className=\"sadometer-root\">\r\n      <Header onMindBotClick={() => setShowMindBot(true)} />\r\n      <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n        <h2 style={{marginBottom: 0}}>Sad-o-Meter <span style={{fontSize: 28}}>{emoji}</span></h2>\r\n        <div className=\"sadometer-progress-bar\">\r\n          <div className=\"sadometer-progress\" style={{width: `${(step / questions.length) * 100}%`}} />\r\n        </div>\r\n        {/* Render all questions at once like Google Forms */}\r\n        {score === null && (\r\n          <form style={{width:'100%', maxWidth:420}} onSubmit={e => {e.preventDefault(); handleSubmit();}}>\r\n            {questions.map((q, idx) => (\r\n              <div key={idx} className=\"sadometer-question-card\" style={{display:'flex', flexDirection:'column', alignItems:'center', marginBottom:18}}>\r\n                <div className=\"sadometer-question\" style={{justifyContent:'center', textAlign:'center'}}>{q}</div>\r\n                <div className=\"sadometer-options\" style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n                  {SADOMETER_OPTIONS.map((opt, i) => (\r\n                    <label key={i} style={{margin:'6px auto', minWidth:120, cursor:'pointer'}}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`q${idx}`}\r\n                        value={opt}\r\n                        checked={answers[idx] === opt}\r\n                        onChange={() => setAnswers(a => { const na = [...a]; na[idx] = opt; return na; })}\r\n                        style={{marginRight:8}}\r\n                        required={true}\r\n                      />\r\n                      {opt}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <button className=\"feature-btn\" type=\"submit\" style={{marginTop:24}} disabled={loading}>\r\n              {loading ? 'Analyzing...' : 'Get Me My Score'}\r\n            </button>\r\n          </form>\r\n        )}\r\n        {score !== null && (\r\n          <div style={{marginTop: 32}}>\r\n            <GaugeScoreMeter\r\n              score={score}\r\n              label=\"Your Sadness Score\"\r\n              subLabel=\"Sadness Level\"\r\n              tooltip=\"Lower is better! This is your sadness score.\"\r\n              goodIsHigh={false}\r\n            />\r\n            {result && <div style={{marginTop: 18, fontWeight: 600, color: '#4caf50'}}>{result}</div>}\r\n          </div>\r\n        )}\r\n        {result && !loading && score === null && (\r\n          <div style={{marginTop: 18, fontWeight: 600, color: 'red'}}>{result}</div>\r\n        )}\r\n      </div>\r\n      {showMindBot && <div style={{zIndex: 4000, position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh'}}><Header onMindBotClick={() => setShowMindBot(false)} /></div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}