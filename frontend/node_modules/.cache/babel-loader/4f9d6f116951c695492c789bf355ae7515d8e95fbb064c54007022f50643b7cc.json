{"ast":null,"code":"var _jsxFileName = \"D:\\\\testcare\\\\frontend\\\\src\\\\MindBotChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './MindBotChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MindBotChat({\n  onClose\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Hi! I am MindBot ðŸ¤–. How can I help you today?'\n  }]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(msgs => [...msgs, userMsg]);\n    setInput('');\n    setLoading(true);\n    try {\n      const res = await fetch('/api/mindbot-chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!res.ok) {\n        setMessages(msgs => [...msgs, {\n          sender: 'bot',\n          text: 'Sorry, there was a problem connecting to MindBot.'\n        }]);\n      } else {\n        const data = await res.json();\n        setMessages(msgs => [...msgs, {\n          sender: 'bot',\n          text: data.reply || '...'\n        }]);\n      }\n    } catch (e) {\n      setMessages(msgs => [...msgs, {\n        sender: 'bot',\n        text: 'Error: ' + e.message\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !loading) sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mindbot-chat-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mindbot-chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"MindBot \\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mindbot-close-btn\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mindbot-chat-body\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mindbot-msg ${msg.sender}`,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mindbot-chat-input-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Type your message...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading || !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(MindBotChat, \"gdQrno+iQ0pvIa5gC9d343jhbcM=\");\n_c = MindBotChat;\nvar _c;\n$RefreshReg$(_c, \"MindBotChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","MindBotChat","onClose","_s","messages","setMessages","sender","text","input","setInput","loading","setLoading","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","sendMessage","trim","userMsg","msgs","res","fetch","method","headers","body","JSON","stringify","message","ok","data","json","reply","e","handleKeyDown","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","i","ref","type","value","onChange","target","onKeyDown","placeholder","disabled","_c","$RefreshReg$"],"sources":["D:/testcare/frontend/src/MindBotChat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './MindBotChat.css';\r\n\r\nexport default function MindBotChat({ onClose }) {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: 'Hi! I am MindBot ðŸ¤–. How can I help you today?' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n    const userMsg = { sender: 'user', text: input };\r\n    setMessages(msgs => [...msgs, userMsg]);\r\n    setInput('');\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/mindbot-chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input })\r\n      });\r\n      if (!res.ok) {\r\n        setMessages(msgs => [...msgs, { sender: 'bot', text: 'Sorry, there was a problem connecting to MindBot.' }]);\r\n      } else {\r\n        const data = await res.json();\r\n        setMessages(msgs => [...msgs, { sender: 'bot', text: data.reply || '...' }]);\r\n      }\r\n    } catch (e) {\r\n      setMessages(msgs => [...msgs, { sender: 'bot', text: 'Error: ' + e.message }]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.key === 'Enter' && !loading) sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mindbot-chat-modal\">\r\n      <div className=\"mindbot-chat-header\">\r\n        <span>MindBot ðŸ¤–</span>\r\n        <button className=\"mindbot-close-btn\" onClick={onClose}>Ã—</button>\r\n      </div>\r\n      <div className=\"mindbot-chat-body\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`mindbot-msg ${msg.sender}`}>{msg.text}</div>\r\n        ))}\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n      <div className=\"mindbot-chat-input-row\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder=\"Type your message...\"\r\n          disabled={loading}\r\n        />\r\n        <button onClick={sendMessage} disabled={loading || !input.trim()}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}